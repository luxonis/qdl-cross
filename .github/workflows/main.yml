name: Build and Release

on:
  workflow_dispatch:
  push:
    tags:
      - "latest"

jobs:
  build-linux:
    name: Build (${{ matrix.platform }})
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - platform: linux-x86_64
            container: alpine:latest
            rename: qdl-linux-x86_64
          - platform: linux-aarch64
            container: dockcross/linux-arm64-musl:latest
            rename: qdl-linux-aarch64

    container:
      image: ${{ matrix.container }}
      options: --init

    steps:
      - name: Install git
        if: matrix.container == 'alpine:latest'
        run: apk add --no-cache git

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install dependencies
        if: matrix.container == 'alpine:latest'
        run: .ci/scripts/install_dependencies_alpine.sh

      - name: Set safe git directory
        run: git config --global --add safe.directory "$GITHUB_WORKSPACE"

      - name: Run build script
        run: .ci/scripts/build_in_container.sh

      - name: Rename binary
        run: |
          mkdir -p artifacts
          cp .out/qdl/qdl artifacts/${{ matrix.rename }}

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.rename }}
          path: artifacts/${{ matrix.rename }}

  build-macos:
    name: Build (macOS)
    runs-on: ${{ matrix.runner }}
    strategy:
      matrix:
        include:
          - platform: macos-x86_64
            runner: macos-13
          - platform: macos-aarch64
            runner: macos-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install dependencies
        run: .ci/scripts/install_dependencies_macos.sh

      - name: Run build script
        env:
          PLATFORM: ${{ matrix.platform }}
        run: .ci/scripts/build_in_container.sh

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: qdl-${{ matrix.platform }}
          path: .out/qdl-${{ matrix.platform }}.tar.gz

  build-windows:
    name: Build (Windows)
    runs-on: ${{ matrix.runner }}
    strategy:
      matrix:
        include:
          - platform: windows-x86_64
            runner: windows-latest
    defaults:
      run:
        shell: msys2 {0}
    steps:
      - uses: msys2/setup-msys2@v2
        with:
          msystem: MINGW64
          update: true
          install: git mingw-w64-x86_64-toolchain mingw-w64-x86_64-autotools

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Run build script
        env:
          PLATFORM: ${{ matrix.platform }}
        run: .ci/scripts/build_in_container.sh

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: qdl-${{ matrix.platform }}
          path: .out/qdl-${{ matrix.platform }}.tar.gz

  release:
    name: Publish Dated Release
    needs: [build-linux, build-macos, build-windows]
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Generate dated tag
        id: generate_tag
        run: |
          release_name="Release $(date +'%Y-%m-%d-%H%M')"
          echo "release_name=${release_name}" >> $GITHUB_OUTPUT

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          name: ${{ steps.generate_tag.outputs.release_name }}
          tag_name: latest
          files: |
            artifacts/qdl-linux-x86_64/qdl-linux-x86_64
            artifacts/qdl-linux-aarch64/qdl-linux-aarch64
            artifacts/qdl-macos-x86_64/qdl-macos-x86_64.tar.gz
            artifacts/qdl-macos-aarch64/qdl-macos-aarch64.tar.gz
            artifacts/qdl-windows-x86_64/qdl-windows-x86_64.tar.gz
          prerelease: false
          draft: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
